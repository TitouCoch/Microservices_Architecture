---
openapi: 3.1.0
info:
  title: User API
  description: This is the API of the User service
  contact:
    email: titouan.cocheril@imt-atlantique.fr
  license:
    name: GPL v3
    url: https://titoucoch.github.io/
  version: 1.0.0
tags:
- name: admins
  description: Secured Admin-only calls
- name: developers
  description: Operations available to regular developers
paths:
  /:
    get:
      tags:
      - developers
      summary: home page of the service
      description: |
        Nothing to do
      operationId: home
      responses:
        "200":
          description: welcome message
          content:
            text/html:
              schema:
                type: string
                example: <h1>Test</h1>
  /users:
    get:
      tags:
      - developers
      summary: get the full JSON database
      description: |
        Nothing to do
      operationId: get_json
      responses:
        "200":
          description: full JSON
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllUsers'
  /bookings/{userid}:
    get:
      tags:
      - developers
      summary: get the bookings from a user id
      description: By passing in the appropriate options, you can get bookings of a user
      operationId: get_booking_for_user
      parameters:
      - name: userid
        in: path
        description: User ID.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Bookings of the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingsUser'
        "400":
          description: bad input parameter
    post:
      tags:
      - admins
      summary: add a booking for a user
      description: Adds a booking for the user, the service showtimes have to be requested to check the validity of the booking that is asked
      operationId: add_booking_byuser
      parameters:
      - name: userid
        in: path
        description: User ID.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: item to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewMovie'
      responses:
        "200":
          description: Booking created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingsUser'
        "409":
          description: an existing item already exists
components:
  schemas:
    AllUsers:
      type: array
      items:
        $ref: '#/components/schemas/User'
    User:
      required:
      - id
      - name
      - last_active
      type: object
      properties:
        id:
          type: string
          example: chris_rivers
        name:
          type: string
          example: Chris Rivers
        last_active:
          type: int
          example: 1360031222

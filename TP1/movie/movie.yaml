---
openapi: 3.1.0
info:
  title: Movie API
  summary: This is the API of the Movie service
  description: This is the API of the Movie service, it should be much much much much much much much much much much much much much much much much much much much much much longer
  contact:
    name: Titouan Cocheril
    url: https://titoucoch.github.io/
    email: titouan.cocheril@imt-atlantique.fr
  license:
    name: GPL v3
    url: https://www.gnu.org/licenses/gpl-3.0.en.html
  version: 1.0.0
tags:
- name: admins
  description: Secured Admin-only calls
- name: developers
  description: Operations available to regular developers
paths:
  /:
    get:
      tags:
      - developers
      summary: home page of the service
      description: |
        Nothing to do
      operationId: home
      responses:
        "200":
          description: welcome message
          content:
            text/html:
              schema:
                type: string
                example: <h1 style='color:blue'>Welcome to the Movie service!</h1>
  /json:
    get:
      tags:
      - developers
      summary: get the full JSON database
      description: |
        Nothing to do
      operationId: get_json
      responses:
        "200":
          description: full JSON
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllMovies'
  /movies/{movieid}:
    get:
      tags:
      - developers
      summary: get the movie by its id
      description: By passing in the appropriate options, you can get info of a Movie
      operationId: get_movie_byid
      parameters:
      - name: movieid
        in: path
        description: Movie ID.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Movie description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieItem'
        "400":
          description: bad input parameter
    post:
      tags:
      - admins
      summary: add a movie item
      description: Adds a movie to the system
      operationId: create_movie
      parameters:
      - name: movieid
        in: path
        description: Movie ID.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Inventory item to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovieItem'
      responses:
        "200":
          description: Movie created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieItem'
        "409":
          description: an existing item already exists
    delete:
      tags:
      - admins
      summary: delete a movie item
      description: Adds a movie to the system
      operationId: del_movie
      parameters:
      - name: movieid
        in: path
        description: Movie ID.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: item deleted
        "400":
          description: ID not found
  /titles:
    get:
      tags:
      - developers
      summary: get the movie by its title
      description: |
        By passing in the appropriate options, you can get Movie info
      operationId: get_movie_bytitle
      parameters:
      - name: title
        in: query
        description: pass a title
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Movie item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieItem'
        "400":
          description: bad input parameter
  /API/{movie_title}:
    get:
      tags:
        - developers
      summary: get the movie by its title from the API
      description: |
        By passing in the appropriate options, you can get Movie info from the API
      operationId: get_movie_bytitle_from_api
      parameters:
      - name: movie_title
        in: path
        description: Movie Title
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Movie item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieItem'
        "400":
          description: bad input parameter
  /movies/{movieid}/{rate}:
    put:
      tags:
      - admins
      summary: update a movie rate
      description: update the rating of a movie
      operationId: update_movie_rating
      parameters:
      - name: movieid
        in: path
        description: Movie ID.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: rate
        in: path
        description: Movie rating.
        required: true
        style: simple
        explode: false
        schema:
          maximum: 10
          minimum: 0
          type: integer
      responses:
        "200":
          description: rate updated
        "400":
          description: movie ID not found
components:
  schemas:
    AllMovies:
      type: object
      required:
        - movies
      properties:
        movies:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/MovieItem'
    MovieItem:
      type: object
      required:
        - title
        - rating
        - director
        - id
      properties:
        title:
          type: string
          example: The Martian
        rating:
          type: integer
          example: 7
        director:
          type: string
          example: Paul McGuigan
        id:
          type: string
          example: 39ab85e5-5e8e-4dc5-afea-65dc368bd7ab


